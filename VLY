#include <chainparams.h>
#include <uint256.h>

class CMainParams : public CChainParams {
public:
    CMainParams() {
        strNetworkID = "main";
        consensus.nSubsidyHalvingInterval = 210000; // Халвінг кожні 210,000 блоків
        consensus.BIP16Height = 0; // Активувати BIP16 одразу
        consensus.BIP34Height = 0;
        consensus.BIP65Height = 0;
        consensus.BIP66Height = 0;
        consensus.powLimit = uint256S("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // 2 тижні
        consensus.nPowTargetSpacing = 10 * 60; // 10 хвилин
        consensus.fPowAllowMinDifficultyBlocks = false;
        consensus.fPowNoRetargeting = false;
        consensus.nRuleChangeActivationThreshold = 1916; // 95% з 2016 блоків
        consensus.nMinerConfirmationWindow = 2016; // Вікно для складності
        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;
        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 0;
        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 0;

        pchMessageStart[0] = 0x56; // VLY унікальні байти
        pchMessageStart[1] = 0x4c;
        pchMessageStart[2] = 0x59;
        pchMessageStart[3] = 0x01;
        nDefaultPort = 18444;
        nPruneAfterHeight = 100000;
        genesis = CreateGenesisBlock(1691936160, 123456, 0x1d00ffff, 1, 50 * COIN); // Дата: 13.08.2025
        consensus.hashGenesisBlock = genesis.GetHash();
        assert(consensus.hashGenesisBlock == uint256S("0x...")); // Перегенеруй вручну
        assert(genesis.hashMerkleRoot == uint256S("0x...")); // Перегенеруй вручну

        vSeeds.clear(); // Додай власні сид-ноди пізніше
        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1, 0); // Адреси як у BTC
        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1, 5);
        bech32_hrp = "vly";
    }
};

static CMainParams mainParams;
